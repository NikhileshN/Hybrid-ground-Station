transmitter side:
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <DHT.h>

#define DHTPIN 4 // Pin connected to DHT22 data pin
#define DHTTYPE DHT22   // DHT22 sensor type

DHT dht(DHTPIN, DHTTYPE);

RF24 radio(9, 10);  // Set CE and CSN pins

void setup() {
  Serial.begin(9600);
  dht.begin();
  radio.begin();
  radio.openWritingPipe(0xF0F0F0F0E1LL);  // Set the writing pipe address
}

void loop() {
  float temperature = dht.readTemperature();  // Read temperature from DHT22
  float humidity = dht.readHumidity();  // Read humidity from DHT22

  // Convert temperature and humidity to strings
  String temperatureString = String(temperature, 2);
  String humidityString = String(humidity, 2);

  // Construct the message with humidity and temperature values separated by a comma
  String message ="Ardunio:temp: "+ temperatureString + " & humd:" + humidityString;

  radio.write(message.c_str(), message.length() + 1);  // Send the message
  Serial.println("Message sent: " + message);
  delay(1000);  // Delay between transmissions
}
receiver side:

import time
import spidev
import RPi.GPIO as GPIO
from RPLCD.i2c import CharLCD

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

# Initialize SPI
spi = spidev.SpiDev()
spi.open(0, 0)
spi.max_speed_hz = 1000000

# NRF24L01+ register addresses
NRF_CONFIG = 0x00
NRF_EN_AA = 0x01
NRF_SETUP_AW = 0x03
NRF_SETUP_RETR = 0x04
NRF_RF_CH = 0x05
NRF_RF_SETUP = 0x06
NRF_STATUS = 0x07
NRF_RX_ADDR_P0 = 0x0A
NRF_RX_PW_P0 = 0x11
NRF_EN_RXADDR = 0x02

# Set the pipe address and payload size
pipe_address = [0xE7, 0xE7, 0xE7, 0xE7, 0xE7]
payload_size = 32

# Set up NRF24L01+ module
GPIO.setup(25, GPIO.OUT)
GPIO.output(25, GPIO.LOW)
GPIO.setup(8, GPIO.OUT)
GPIO.output(8, GPIO.HIGH)
time.sleep(0.1)

# Configure NRF24L01+ registers
def nrf_configure():
    spi.xfer2([NRF_CONFIG, 0x3F])
    spi.xfer2([NRF_EN_AA, 0x00])
    spi.xfer2([NRF_SETUP_AW, 0x03])
    spi.xfer2([NRF_SETUP_RETR, 0x00])
    spi.xfer2([NRF_RF_CH, 0x02])
    spi.xfer2([NRF_RF_SETUP, 0x07])
    spi.xfer2([NRF_STATUS, 0x7E])
    spi.xfer2([NRF_RX_ADDR_P0] + pipe_address)
    spi.xfer2([NRF_RX_PW_P0, payload_size])
    spi.xfer2([NRF_EN_RXADDR, 0x01])

# Receive message from NRF24L01+
def receive_message():
    status = spi.xfer2([NRF_STATUS, 0x00])[1]
    if status & 0x40:
        rx_data = spi.xfer2([0x61] + [0x00] * payload_size)
        return rx_data[1:]

# LCD initialization
lcd = CharLCD('PCF8574', 0x27)

# NRF24L01+ configuration
nrf_configure()

# Main loop
while True:
    message = receive_message()
    if message:
        decoded_message = ''.join(chr(byte) for byte in message).strip('\x00')
        if decoded_message:
            print("Message received: " + decoded_message)
            lcd.clear()
            lcd.write_string("Received: " + decoded_message)
    
    time.sleep(1)  # Delay between checking for messages
